// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Write struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderIp      string                 `protobuf:"bytes,1,opt,name=sender_ip,json=senderIp,proto3" json:"sender_ip,omitempty"`
	Lsn           int64                  `protobuf:"varint,2,opt,name=lsn,proto3" json:"lsn,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Val           string                 `protobuf:"bytes,4,opt,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Write) Reset() {
	*x = Write{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Write) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Write) ProtoMessage() {}

func (x *Write) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Write.ProtoReflect.Descriptor instead.
func (*Write) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Write) GetSenderIp() string {
	if x != nil {
		return x.SenderIp
	}
	return ""
}

func (x *Write) GetLsn() int64 {
	if x != nil {
		return x.Lsn
	}
	return 0
}

func (x *Write) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Write) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

type Read struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderIp      string                 `protobuf:"bytes,1,opt,name=sender_ip,json=senderIp,proto3" json:"sender_ip,omitempty"`
	Lsn           int64                  `protobuf:"varint,2,opt,name=lsn,proto3" json:"lsn,omitempty"`
	Request       string                 `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Read) Reset() {
	*x = Read{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Read) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Read) ProtoMessage() {}

func (x *Read) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Read.ProtoReflect.Descriptor instead.
func (*Read) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *Read) GetSenderIp() string {
	if x != nil {
		return x.SenderIp
	}
	return ""
}

func (x *Read) GetLsn() int64 {
	if x != nil {
		return x.Lsn
	}
	return 0
}

func (x *Read) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderIp      string                 `protobuf:"bytes,1,opt,name=sender_ip,json=senderIp,proto3" json:"sender_ip,omitempty"`
	Lsn           int64                  `protobuf:"varint,2,opt,name=lsn,proto3" json:"lsn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Ack) GetSenderIp() string {
	if x != nil {
		return x.SenderIp
	}
	return ""
}

func (x *Ack) GetLsn() int64 {
	if x != nil {
		return x.Lsn
	}
	return 0
}

type Commit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderIp      string                 `protobuf:"bytes,1,opt,name=sender_ip,json=senderIp,proto3" json:"sender_ip,omitempty"`
	Lsn           int64                  `protobuf:"varint,2,opt,name=lsn,proto3" json:"lsn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Commit) Reset() {
	*x = Commit{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *Commit) GetSenderIp() string {
	if x != nil {
		return x.SenderIp
	}
	return ""
}

func (x *Commit) GetLsn() int64 {
	if x != nil {
		return x.Lsn
	}
	return 0
}

type Subscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderIp      string                 `protobuf:"bytes,1,opt,name=sender_ip,json=senderIp,proto3" json:"sender_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscribe) Reset() {
	*x = Subscribe{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscribe) ProtoMessage() {}

func (x *Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscribe.ProtoReflect.Descriptor instead.
func (*Subscribe) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *Subscribe) GetSenderIp() string {
	if x != nil {
		return x.SenderIp
	}
	return ""
}

var File_messages_proto protoreflect.FileDescriptor

const file_messages_proto_rawDesc = "" +
	"\n" +
	"\x0emessages.proto\x12\bmessages\"Z\n" +
	"\x05Write\x12\x1b\n" +
	"\tsender_ip\x18\x01 \x01(\tR\bsenderIp\x12\x10\n" +
	"\x03lsn\x18\x02 \x01(\x03R\x03lsn\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\x12\x10\n" +
	"\x03val\x18\x04 \x01(\tR\x03val\"O\n" +
	"\x04Read\x12\x1b\n" +
	"\tsender_ip\x18\x01 \x01(\tR\bsenderIp\x12\x10\n" +
	"\x03lsn\x18\x02 \x01(\x03R\x03lsn\x12\x18\n" +
	"\arequest\x18\x03 \x01(\tR\arequest\"4\n" +
	"\x03Ack\x12\x1b\n" +
	"\tsender_ip\x18\x01 \x01(\tR\bsenderIp\x12\x10\n" +
	"\x03lsn\x18\x02 \x01(\x03R\x03lsn\"7\n" +
	"\x06Commit\x12\x1b\n" +
	"\tsender_ip\x18\x01 \x01(\tR\bsenderIp\x12\x10\n" +
	"\x03lsn\x18\x02 \x01(\x03R\x03lsn\"(\n" +
	"\tSubscribe\x12\x1b\n" +
	"\tsender_ip\x18\x01 \x01(\tR\bsenderIpB\fZ\n" +
	"./messagesb\x06proto3"

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData []byte
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)))
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_messages_proto_goTypes = []any{
	(*Write)(nil),     // 0: messages.Write
	(*Read)(nil),      // 1: messages.Read
	(*Ack)(nil),       // 2: messages.Ack
	(*Commit)(nil),    // 3: messages.Commit
	(*Subscribe)(nil), // 4: messages.Subscribe
}
var file_messages_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_messages_proto_rawDesc), len(file_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
